Agent///
Column Names: ['USER_ID', 'LICENSE_NUMBER', 'COMMISION_RATE', 'EMPLOYEMENT_DATE']
CREATE TABLE "Agent" (
    USER_ID INTEGER PRIMARY KEY,
    LICENSE_NUMBER VARCHAR(255) NOT NULL,
    COMMISION_RATE DECIMAL(5, 2) NOT NULL,
    EMPLOYEMENT_DATE DATE NOT NULL,
    FOREIGN KEY ("USER_ID") REFERENCES "User" ("USER_ID")
)

Agreement///
Column Names: ['AGREEMENT_ID', 'TITLE', 'DESCRIPTION', 'AGREEMENT_DATE', 'USER_ID']
CREATE TABLE "Agreement" (
    AGREEMENT_ID INTEGER NOT NULL PRIMARY KEY,
    TITLE VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255),
    AGREEMENT_DATE DATE NOT NULL,
    USER_ID INTEGER NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES "User" (USER_ID)
)

Client///
Column Names: ['USER_ID', 'BUDGET', 'PREFFERED_LOCATION']
CREATE TABLE "Client" (
    USER_ID INT NOT NULL PRIMARY KEY,
    BUDGET DECIMAL(10, 2) NOT NULL,
    PREFFERED_LOCATION VARCHAR(255) NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES "User" (USER_ID)
)

Manager///
Column Names: ['USER_ID', 'SUPERVISION_AREA', 'EMPLOYMENT_DATE']
CREATE TABLE "Manager" (
    USER_ID INTEGER PRIMARY KEY,
    SUPERVISION_AREA VARCHAR(100),
    EMPLOYMENT_DATE DATE,
    FOREIGN KEY (USER_ID) REFERENCES "User" (USER_ID)
)

ManagerAgent///
Column Names: ['MANAGER_ID', 'AGENT_ID']
CREATE TABLE "ManagerAgent" (
    MANAGER_ID INTEGER NOT NULL,
    AGENT_ID INTEGER NOT NULL,
    PRIMARY KEY (MANAGER_ID, AGENT_ID),
    FOREIGN KEY (MANAGER_ID) REFERENCES "Manager" (USER_ID),
    FOREIGN KEY (AGENT_ID) REFERENCES "Agent" (USER_ID)
)

Meeting///
Column Names: ['MEETING_ID', 'DATE_MEETING', 'TIME_MEETING', 'STATUS', 'PROPERTY_ID', 'CLIENT_ID', 'AGENT_ID']
CREATE TABLE "Meeting" (
    MEETING_ID INTEGER PRIMARY KEY,
    DATE_MEETING DATE NOT NULL,
    TIME_MEETING TIME NOT NULL,
    STATUS VARCHAR(255) NOT NULL,
    PROPERTY_ID INTEGER NOT NULL,
    CLIENT_ID INTEGER NOT NULL,
    AGENT_ID INTEGER NOT NULL,
    FOREIGN KEY (PROPERTY_ID) REFERENCES "Property" (PROPERTY_ID),
    FOREIGN KEY (CLIENT_ID) REFERENCES "Client"(USER_ID),
    FOREIGN KEY (AGENT_ID) REFERENCES "Agent"(USER_ID)
)
ALTER TABLE "Meeting" ADD CONSTRAINT "MeetingStatus" CHECK (STATUS IN ('Scheduled', 'ReScheduled', 'Completed', 'Cancelled'));

Payment
Column Names: ['PAYMENT_ID', 'AMOUNT', 'PAYMENT_DATE', 'STATUS', 'METHOD', 'RENT_ID']
CREATE TABLE "Payment" (
    PAYMENT_ID INTEGER PRIMARY KEY,
    AMOUNT DECIMAL(10, 2) NOT NULL,
    PAYMENT_DATE DATE NOT NULL,
    STATUS VARCHAR(20) NOT NULL,
    METHOD VARCHAR(20) NOT NULL,
    RENT_ID INTEGER NOT NULL,
    FOREIGN KEY (RENT_ID) REFERENCES "Rents"(RENT_ID)
)
ALTER TABLE "Payment" ADD CONSTRAINT "PaymentStatus" CHECK (STATUS IN ('Pending', 'Paid', 'Failed'));


Property///
Column Names: "['PROPERTY_ID', 'ADDRESS', 'CITY', 'STATE', 'POSTAL_CODE', 'SIZE', 'BEDROOMS', 'BATHROOMS', 'PRICE', 'STATUS', 'TYPE', 'DESCRIPTION']"
CREATE TABLE "Property" (
    "PROPERTY_ID" INTEGER PRIMARY KEY,
    "ADDRESS" VARCHAR(255) NOT NULL,
    "CITY" VARCHAR(255) NOT NULL,
    "STATE" VARCHAR(255) NOT NULL,
    "POSTAL_CODE" VARCHAR(255) NOT NULL,
    "SIZE" INTEGER NOT NULL,
    "BEDROOMS" INTEGER NOT NULL,
    "BATHROOMS" INTEGER NOT NULL,
    "PRICE" INTEGER NOT NULL,
    "STATUS" VARCHAR(255) NOT NULL CHECK (STATUS IN ('AVAILABLE', 'PENDING', 'SOLD')),
    "TYPE" VARCHAR(255) NOT NULL,
    "DESCRIPTION" VARCHAR(255) NOT NULL
)

Rents///
Column Names: ['RENT_ID', 'START_DATE', 'END_DATE', 'DEPOSIT', 'STATUS', 'CLIENT_ID', 'PROPERTY_ID']
CREATE TABLE "Rents" (
    RENT_ID INTEGER PRIMARY KEY,
    START_DATE DATE NOT NULL,
    END_DATE DATE NOT NULL,
    DEPOSIT DECIMAL(10, 2) NOT NULL,
    STATUS VARCHAR(10) NOT NULL,
    CLIENT_ID INTEGER NOT NULL,
    PROPERTY_ID INTEGER NOT NULL,
    FOREIGN KEY (CLIENT_ID) REFERENCES "Client"(USER_ID),
    FOREIGN KEY (PROPERTY_ID) REFERENCES "Property"(PROPERTY_ID)
)
ALTER TABLE "Rents" ADD CONSTRAINT "RentStatus" CHECK (STATUS IN ('Pending', 'Ended', 'Active'));

Repairs///
Column Names: ['REPAIR_ID', 'REPAIR_DATE', 'STATUS', 'DESCRIPTION', 'PROPERTY_ID']
CREATE TABLE "Repairs" (
    REPAIR_ID INTEGER PRIMARY KEY,
    REPAIR_DATE DATE NOT NULL,
    STATUS VARCHAR(20) NOT NULL,
    DESCRIPTION VARCHAR(100) NOT NULL,
    PROPERTY_ID INTEGER NOT NULL,
    FOREIGN KEY (PROPERTY_ID) REFERENCES "Property" (PROPERTY_ID)             
)
ALTER TABLE "Repairs" ADD CONSTRAINT RepairStatus" CHECK (STATUS IN ('Pending', 'In Progress', 'Completed','Rescheduled'));

Review///
Column Names: ['REVIEW_ID', 'RATING', 'DESCRIPTION', 'CLIENT_ID', 'AGENT_ID']
CREATE TABLE "Review" (
    REVIEW_ID INTEGER PRIMARY KEY,
    RATING INTEGER NOT NULL,
    DESCRIPTION VARCHAR(255),
    CLIENT_ID INTEGER NOT NULL,
    AGENT_ID INTEGER NOT NULL,
    FOREIGN KEY (CLIENT_ID) REFERENCES "Client" (USER_ID),
    FOREIGN KEY (AGENT_ID) REFERENCES "Agent" (USER_ID)
)

Sales///
Column Names: ['SALE_ID', 'PRICE', 'STATUS', 'SALE_DATE', 'PROPERTY_ID', 'CLIENT_ID', 'AGENT_ID']
CREATE TABLE "Sales" (
    SALE_ID INTEGER PRIMARY KEY,
    PRICE DECIMAL(10, 2) NOT NULL,
    STATUS VARCHAR(255) NOT NULL,
    SALE_DATE DATE NOT NULL,
    PROPERTY_ID INTEGER ,
    CLIENT_ID INTEGER NOT NULL,
    AGENT_ID INTEGER NOT NULL,

    FOREIGN KEY (PROPERTY_ID) REFERENCES "Property"(PROPERTY_ID),
    FOREIGN KEY (CLIENT_ID) REFERENCES "Client"(USER_ID),
    FOREIGN KEY (AGENT_ID) REFERENCES "Agent"(USER_ID)
)
ALTER TABLE "Sales" ADD CONSTRAINT "SaleStatus" CHECK (STATUS IN ('Pending', 'Completed', 'Cancelled'))


Tel_number///
Column Names: ['USER_ID', 'TEL_NUMBER']
CREATE TABLE "Tel_number" (
    USER_ID INTEGER NOT NULL,
    TEL_NUMBER VARCHAR(20) NOT NULL,
    PRIMARY KEY (USER_ID, TEL_NUMBER),
    FOREIGN KEY (USER_ID) REFERENCES "User" (USER_ID)
)

User///
Column Names: ['USER_ID', 'NAME', 'SURNAME', 'EMAIL', 'PASSWORD', 'ADDRESS']
CREATE TABLE "User" (
    USER_ID INTEGER PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    SURNAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(50) NOT NULL,
    PASSWORD VARCHAR(50) NOT NULL,
    ADDRESS VARCHAR(100) NOT NULL
)